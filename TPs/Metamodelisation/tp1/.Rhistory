setwd("~/ModIA_5A/Metadonn√©es/tps/tp1")
linKern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
kern <- sigma^2*outer(x, y, '*')
return(kern)
}
linKern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
kern <- sigma^2*outer(x, y, '*')
return(kern)
}
cosKern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma,theta)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
theta <- param[2]
dist <- outer(x/theta, y/theta, '-')
kern <- sigma^2*cos(dist)
return(kern)
}
expKern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma,theta)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
theta <- param[2]
dist <- outer(x/theta, y/theta, '-')
kern <- sigma^2*exp(-abs(dist))
return(kern)
}
rm(list=ls()) # to clear the environment
#### loading some packages and functions ####
library("plot3D")
library("MASS")
source("kernFun.R")
#### Example with the Exp. kernel  ####
x <- seq(0, 1, 0.01) # regular grid
param <- c(1, 0.2) # covariance parameters
k1 <- expKern(x, x, param) # computing the covariance matrix using an exp. kernel
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
k1 <- expKern(x, x, param) # computing the covariance matrix using an exp. kernel
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
#### loading some packages and functions ####
library("plot3D")
install.packages("plot3D")
install.packages("MASS")
install.packages("MASS")
linKern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
kern <- sigma^2*outer(x, y, '*')
return(kern)
}
cosKern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma,theta)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
theta <- param[2]
dist <- outer(x/theta, y/theta, '-')
kern <- sigma^2*cos(dist)
return(kern)
}
expKern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma,theta)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
theta <- param[2]
dist <- outer(x/theta, y/theta, '-')
kern <- sigma^2*exp(-abs(dist))
return(kern)
}
rm(list=ls()) # to clear the environment
#### loading some packages and functions ####
library("plot3D")
library("MASS")
source("kernFun.R")
#### Example with the Exp. kernel  ####
x <- seq(0, 1, 0.01) # regular grid
param <- c(1, 0.2) # covariance parameters
k1 <- expKern(x, x, param) # computing the covariance matrix using an exp. kernel
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
mat5_2Kern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma,theta)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
theta <- param[2]
dist <- outer(x/theta, y/theta, '-')
kern <- sigma^2*(1+(sqrt(5)*abs(dist))+((5/3)*abs(dist)^2))*(-sqrt(5)*abs(dist))
return(kern)
}
x <- seq(0, 1, 0.01) # regular grid
param <- c(1, 0.2) # covariance parameters
k1 <- mat5_2Kern(x, x, param) # computing the covariance matrix using an exp. kernel
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
mvnorm(n = 3, mu = rep(0,n), Sigma = k1)
mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
## to complete  ##
## simulating some samples using the "mvrnorm" function
# samples <- mvrnorm(...)
# ?matplot # a function to plot the samples. The samples are indexed by columns
# Q: what can you observe from the samples?
n = 101
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
par = (mfrow = c(1,1))
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
matplot(x, y(samples), type = "l", main = "sample paths", ylab = "")
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
mat5_2Kern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma,theta)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
theta <- param[2]
dist <- outer(x/theta, y/theta, '-')
kern <- sigma^2*(1+(sqrt(5)*abs(dist))+((5/3)*abs(dist)^2))*(-sqrt(5)*abs(dist))
return(kern)
}
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
k1 <- mat5_2Kern(x, x, param) # computing the covariance matrix using an exp. kernel
par = (mfrow = c(1,1))
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
k1 <- mat5_2Kern(x, x, param) # computing the covariance matrix using an exp. kernel
par = (mfrow = c(1,1))
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
mat5_2Kern <- function(x, y, param){
# input:
#  x,y: input vectors
#  param: parameters (sigma,theta)
# output:
#  kern: covariance matrix cov(x,y)
sigma <- param[1]
theta <- param[2]
dist <- outer(x/theta, y/theta, '-')
kern <- sigma^2*(1+(sqrt(5)*abs(dist))+((5/3)*(abs(dist)^2)))*exp(-sqrt(5)*abs(dist))
return(kern)
}
## to complete  ##
## simulating some samples using the "mvrnorm" function
# samples <- mvrnorm(...)
# ?matplot # a function to plot the samples. The samples are indexed by columns
# Q: what can you observe from the samples?
n = 101
x <- seq(0, 1, 0.01) # regular grid
param <- c(1, 0.2) # covariance parameters
k1 <- mat5_2Kern(x, x, param) # computing the covariance matrix using an exp. kernel
par = (mfrow = c(1,1))
image2D(k1, theta = 0, xlab = "x", ylab = "y") # plotting the covariance matrix
# Q: what can you observe from the covariance matrix?
?mvrnorm # using the help from RStudio
samples = mvrnorm(n = 3, mu = rep(0,n), Sigma = k1)
matplot(x, y(samples), type = "l", main = "sample paths", ylab = "")
matplot(x, t(samples), type = "l", main = "sample paths", ylab = "")
